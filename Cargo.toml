[package]
name = "moc"
version = "0.18.0"
authors = [
    "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
    "Matthieu Baumann <matthieu.baumann@astro.unistra.fr>"
]
description = """
Library made to create and manipulate HEALPix
Multi-Order Coverages maps (MOCs), see https://ivoa.net/documents/MOC/
"""
license = "Apache-2.0 OR MIT"
readme = "README.md"
categories = ["science", "data-structures", "algorithms"]
keywords = ["healpix", "moc"]
documentation = "https://docs.rs/moc"
homepage = "https://github.com/cds-astro/cds-moc-rust/"
repository = "https://github.com/cds-astro/cds-moc-rust/"
edition = "2021"
exclude = [
    "resources",
]

[lib]
name = "moc"
path = "src/lib.rs"
test = true
doctest = true
bench = true

[workspace]
members = [
    "crates/cli",
    "crates/set"
]
exclude = ["crates/wasm"]
# I so far have a problem with building the cli with:
# - cargo deb --target x86_64-unknown-linux-musl
# It tries to compile crates/wasm but failed because of
# crate-type = ["cdylib"] in wasm Cargo.toml

[workspace.dependencies]
healpix = { package = "cdshealpix", version = "0.7.3" }
byteorder = "1.5.0"
log = "0.4.27"
mapproj = "0.4.0"
num = "0.4.3"
rayon = "1.10.0"

[dependencies]
healpix = { workspace = true }
byteorder = { workspace = true }
log = { workspace = true }
mapproj = { workspace = true }
rayon = { workspace = true }
num = { workspace = true }
nom = "7.1.3"
quick-error = "2.0.1"
serde_json = "1.0.140"
flate2 = "1.1.1" # Compression/decompression
png = "0.17.10" # For png
slab = { version = "0.4.9", optional = true }
stc-s = "0.1.0"
thiserror = "2.0.12" # For STC-S (quick-error should be replaced by thiserror everywhere)

[dev-dependencies]
rand = "0.9"
criterion = "0.5.1"

[features]
default = []
storage = ["dep:slab"]


[[bench]]
name = "ranges2cells"
harness = false

[[bench]]
name = "moc_and"
harness = false

[[bench]]
name = "moc_or"
harness = false

[[bench]]
name = "moc_minus"
harness = false

[[bench]]
name = "moc_multi_or"
harness = false

[[bench]]
name = "moc_from_cells"
harness = false

# Run a specific bench:
#  RUSTFLAGS='-C target-cpu=native' cargo bench --bench moc_minus

# See default profiles: https://doc.rust-lang.org/cargo/reference/profiles.html
# But bench can be run with the cpu-native option: RUSTFLAGS='-C target-cpu=native' cargo bench
[profile.bench]
opt-level = 3

# See opti here: https://github.com/johnthagen/min-sized-rust
[profile.release]
lto = true    # Optimize at the link stage (may remove dead code)
codegen-units = 1
panic = "abort"
strip = "debuginfo"

